# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'eedcb79e-839a-40ad-b9e5-8106c4903d99'
  imageRepository: 'demos/springboot/rest-soap-service'
  containerRegistry: 'andreandrade.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  jar_path: '$(Build.SourcesDirectory)/initial/build/libs/rest-soap-service-0.1.0.jar'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Gradle@3
      inputs:
        gradleWrapperFile: '$(Build.SourcesDirectory)/initial/gradlew'
        workingDirectory: '$(Build.SourcesDirectory)/initial'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
        
    - task: CmdLine@2
      inputs:
        script: |
          ls $(Build.SourcesDirectory)/initial
          
          ls $(Build.SourcesDirectory)/initial/build
          
          ls $(Build.SourcesDirectory)/initial/build/libs'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'andreandrade'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg JAR_FILE=$(jar_path) -t $(tag)'
        
    - task: Docker@2
      inputs:
        containerRegistry: 'andreandrade'
        repository: '$(imageRepository):$(tag)'
        command: 'push'

